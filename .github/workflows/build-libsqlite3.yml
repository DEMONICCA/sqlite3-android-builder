name: Build libsqlite3.so Library

on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  build:
    name: Build Shared Library
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: [armeabi-v7a, arm64-v8a, x86, x86_64]

    steps:
      - name: Setup
        run: |
          mkdir -p workspace && cd workspace
          curl -LO https://dl.google.com/android/repository/android-ndk-r26d-linux.zip
          unzip -q android-ndk-r26d-linux.zip
          mv android-ndk-r26d $HOME/ndk

- name: Download latest SQLite source
  working-directory: workspace
  run: |
    curl -s https://www.sqlite.org/download.html -o download.html
    LATEST_URL=$(grep -oE 'https://www.sqlite.org/[0-9]+/sqlite-autoconf-[0-9]+\.tar\.gz' download.html | head -n1)
    if [ -z "$LATEST_URL" ]; then
      echo "‚ùå URL tidak ditemukan, gagal melanjutkan."
      exit 1
    fi
    FILENAME=$(basename "$LATEST_URL")
    VERSION=$(echo "$FILENAME" | grep -oP '(?<=autoconf-)[0-9]+')
    echo "[*] Mengunduh: $FILENAME"
    curl -L "$LATEST_URL" -o "$FILENAME"
    tar xf "$FILENAME"
    echo "$VERSION" > sqlite_version.txt

      - name: Build libsqlite3.so
        working-directory: workspace
        env:
          NDK: ${{ github.workspace }}/workspace/../ndk
        run: |
          export SQLITE_VER=$(cat sqlite_version.txt)
          export SQLITE_DIR=$(find . -type d -name "sqlite-autoconf-*")
          cd $SQLITE_DIR

          case "${{ matrix.arch }}" in
            armeabi-v7a)
              TARGET=armv7a-linux-androideabi
              TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin
              API=21
              ;;
            arm64-v8a)
              TARGET=aarch64-linux-android
              TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin
              API=21
              ;;
            x86)
              TARGET=i686-linux-android
              TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin
              API=21
              ;;
            x86_64)
              TARGET=x86_64-linux-android
              TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin
              API=21
              ;;
          esac

          export AR=$TOOLCHAIN/llvm-ar
          export AS=$TOOLCHAIN/llvm-as
          export CC=$TOOLCHAIN/$TARGET$API-clang
          export CXX=$TOOLCHAIN/$TARGET$API-clang++
          export LD=$TOOLCHAIN/ld
          export RANLIB=$TOOLCHAIN/llvm-ranlib
          export STRIP=$TOOLCHAIN/llvm-strip

          ./configure \
            --host=$TARGET \
            --disable-tcl \
            --enable-shared \
            --enable-json1 \
            --enable-fts5 \
            --enable-rtree

          make -j$(nproc)

          mkdir -p $GITHUB_WORKSPACE/out/${{ matrix.arch }}
          cp .libs/libsqlite3.so $GITHUB_WORKSPACE/out/${{ matrix.arch }}/libsqlite3.so

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libsqlite3-${{ matrix.arch }}
          path: out/${{ matrix.arch }}/libsqlite3.so
          
