name: Build SQLite Android

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      API: 21
      ARCHS: armv7a arm64 x86 x86_64

    steps:
      - uses: actions/checkout@v3

      - name: Setup NDK
        uses: android-actions/setup-ndk@v2
        with:
          ndk-version: "r26d"

      - name: Download SQLite
        id: sqlite
        run: |
          VERSION=$(curl -s https://www.sqlite.org/download.html \
            | grep -oP 'sqlite-autoconf-\K[0-9]+' | head -1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          curl -O https://www.sqlite.org/2025/sqlite-autoconf-${VERSION}.tar.gz
          tar xf sqlite-autoconf-${VERSION}.tar.gz

      - name: Build for all arches
        run: |
          set -e
          for ARCH in $ARCHS; do
            case $ARCH in
              armv7a) TARGET=armv7a-linux-androideabi ;;
              arm64) TARGET=aarch64-linux-android ;;
              x86) TARGET=i686-linux-android ;;
              x86_64) TARGET=x86_64-linux-android ;;
            esac

            VERSION=${{ steps.sqlite.outputs.version }}
            cd sqlite-autoconf-${VERSION}
            export CC="$NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/${TARGET}${API}-clang"
            ./configure --host="${TARGET%-*}" --disable-shared --enable-static
            make -j$(nproc)
            mkdir -p ../out/$ARCH
            cp sqlite3 ../out/$ARCH/sqlite3
            make clean
            cd ..
          done

      - name: Package artifact
        run: zip -r multi-arch-sqlite3.zip out

      - uses: actions/upload-artifact@v3
        with:
          name: multi-arch-sqlite3
          path: multi-arch-sqlite3.zip
